from pathlib import PurePath
from typing import Callable, Collection, Set

from common import OperatingSystem
from common.credentials import Credentials
from common.tags import (
    BRUTE_FORCE_T1110_TAG,
    EXPLOITATION_OF_REMOTE_SERVICES_T1210_TAG,
    REMOTE_SERVICES_T1021_TAG,
)
from infection_monkey.exploit.tools import IRemoteAccessClient, RemoteAuthenticationError
from infection_monkey.i_puppet import TargetHost

from .smb_client import SMBClient
from .wmi_client import WMIClient
from .wmi_options import WMIOptions

LOGIN_TAGS = {
    REMOTE_SERVICES_T1021_TAG,
    BRUTE_FORCE_T1110_TAG,
    EXPLOITATION_OF_REMOTE_SERVICES_T1210_TAG,
}


class WMIRemoteAccessClient(IRemoteAccessClient):
    def __init__(
        self,
        host: TargetHost,
        options: WMIOptions,
        command_builder: Callable[[OperatingSystem, PurePath], str],
        smb_client: SMBClient,
        wmi_client: WMIClient,
    ):
        self._host = host
        self._build_command = command_builder
        self._options = options
        self._smb_client = smb_client
        self._wmi_client = wmi_client

    def login(self, credentials: Credentials, tags: Set[str]):
        tags.update(LOGIN_TAGS)

        try:
            self._wmi_client.login(self._host, credentials)
            self._smb_client.connect_with_user(
                self._host, credentials, self._options.smb_connect_timeout
            )
        except Exception as err:
            raise RemoteAuthenticationError from err

    def get_os(self) -> OperatingSystem:
        return OperatingSystem.WINDOWS

    def execute_agent(self, agent_binary_path: PurePath, tags: Set[str]):
        pass

    def copy_file(self, file: bytes, dest: PurePath, tags: Set[str]):
        pass

    def get_writable_paths(self) -> Collection[PurePath]:
        pass
