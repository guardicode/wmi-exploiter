from pathlib import PureWindowsPath
from unittest.mock import MagicMock

import pytest
from wmi_exploiter.wmi_command_builder import build_wmi_command
from agentpluginapi import IWindowsAgentCommandBuilder

FULL_EXE_PATH = PureWindowsPath("C:\\agent-full.exe")
DESTINATION_EXE_PATH = PureWindowsPath("C:\\agent.exe")
EXPECTED_COMMAND = "cmd.exe /c WMI_RUN_COMMAND"


@pytest.fixture
def windows_agent_command_builder() -> IWindowsAgentCommandBuilder:
    mock_windows_agent_command_builder = MagicMock(spec=IWindowsAgentCommandBuilder)
    mock_windows_agent_command_builder.get_command.return_value = "WMI_RUN_COMMAND"
    return mock_windows_agent_command_builder


@pytest.fixture
def build_command(windows_agent_command_builder: IWindowsAgentCommandBuilder):
    def build(
        remote_agent_binary_full_path: PureWindowsPath,
        remote_agent_binary_destination_path: PureWindowsPath,
    ) -> str:
        return build_wmi_command(
            remote_agent_binary_full_path,
            remote_agent_binary_destination_path,
            windows_agent_command_builder,
        )

    return build


@pytest.mark.parametrize(
    ("remote_agent_binary_full_path,remote_agent_binary_destination_path,"),
    [
        (
            FULL_EXE_PATH,
            DESTINATION_EXE_PATH,
        ),
        (DESTINATION_EXE_PATH, DESTINATION_EXE_PATH),
    ],
)
def test_command(
    build_command,
    remote_agent_binary_full_path: PureWindowsPath,
    remote_agent_binary_destination_path: PureWindowsPath,
    windows_agent_command_builder: IWindowsAgentCommandBuilder,
):
    actual_command = build_command(
        remote_agent_binary_full_path,
        remote_agent_binary_destination_path,
    )

    windows_agent_command_builder.get_command.assert_called_once()
    assert actual_command == EXPECTED_COMMAND
